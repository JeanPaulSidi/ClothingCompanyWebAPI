// <auto-generated />
using System;
using ClothingCompanyWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothingCompanyWebAPI.Migrations
{
    [DbContext(typeof(ClothingCompanyWebAPIContext))]
    [Migration("20241209072426_RemovedSomeProperties")]
    partial class RemovedSomeProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CustomerBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerState")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CustomerZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerAddress = "23 Jk Hwy",
                            CustomerBirthDate = new DateTime(2024, 12, 8, 23, 24, 25, 889, DateTimeKind.Local).AddTicks(169),
                            CustomerCity = "Chehalis",
                            CustomerEmail = "jps@gmail.com",
                            CustomerFirstName = "Jean Paul",
                            CustomerLastName = "Sidi",
                            CustomerPhoneNumber = "123 456 7890",
                            CustomerState = "WA",
                            CustomerZipCode = "12345"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerAddress = "45 K Street",
                            CustomerBirthDate = new DateTime(2024, 12, 8, 23, 24, 25, 889, DateTimeKind.Local).AddTicks(225),
                            CustomerCity = "Centralia",
                            CustomerEmail = "kerly@gmail.com",
                            CustomerFirstName = "Kerly",
                            CustomerLastName = "Image",
                            CustomerPhoneNumber = "360 444 2345",
                            CustomerState = "OR",
                            CustomerZipCode = "00345"
                        });
                });

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 0,
                            OrderDate = new DateTime(2024, 12, 8, 23, 24, 25, 889, DateTimeKind.Local).AddTicks(397),
                            OrderTotalAmount = 125m
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 0,
                            OrderDate = new DateTime(2024, 12, 8, 23, 24, 25, 889, DateTimeKind.Local).AddTicks(400),
                            OrderTotalAmount = 68m
                        });
                });

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderProductId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityProductOrdered")
                        .HasColumnType("int");

                    b.HasKey("OrderProductId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");

                    b.HasData(
                        new
                        {
                            OrderProductId = 1,
                            OrderId = 1,
                            ProductId = 1,
                            QuantityProductOrdered = 3
                        },
                        new
                        {
                            OrderProductId = 2,
                            OrderId = 2,
                            ProductId = 3,
                            QuantityProductOrdered = 2
                        },
                        new
                        {
                            OrderProductId = 3,
                            OrderId = 1,
                            ProductId = 2,
                            QuantityProductOrdered = 1
                        });
                });

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductDescription = "Nice men shirt...",
                            ProductName = "Shirt",
                            ProductPrice = 20m
                        },
                        new
                        {
                            ProductId = 2,
                            ProductDescription = "Nice women winter coat...",
                            ProductName = "Coat",
                            ProductPrice = 65m
                        },
                        new
                        {
                            ProductId = 3,
                            ProductDescription = "Nice Trousers for men...",
                            ProductName = "Trousers",
                            ProductPrice = 34m
                        });
                });

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.Order", b =>
                {
                    b.HasOne("ClothingCompanyWebAPI.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.OrderProduct", b =>
                {
                    b.HasOne("ClothingCompanyWebAPI.Models.Order", "Order")
                        .WithMany("OrdersProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingCompanyWebAPI.Models.Product", "Product")
                        .WithMany("OrdersProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.Order", b =>
                {
                    b.Navigation("OrdersProducts");
                });

            modelBuilder.Entity("ClothingCompanyWebAPI.Models.Product", b =>
                {
                    b.Navigation("OrdersProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
